At first, i've connected a folder to Git and created new file:
1) cd ~/Documents/gitPractice //go to needed directory
2) git init //connected a folder to Git
3) ls -a //checked the existence of hidden folder ".git"
4) cat>file.txt //created new file and added text(press ctrl+D to exit)
    Hello!
5) cat file.txt //checked existence of text
6) git status //checked if git see my file
7) git add file.txt //made new file tracked for git
8) git status //checked if file is tracked
9) git commit -m "text file commit" //made a commit (the text had to be "master: file.txt commit", i forgot about it, will remember thes mistake)

Secondly, i decided to try to make new file exactly in GitHub.
  git pull origin master //i pulled all changes from GitHub to my local repository

Then, i started dealing with pushing from local repository to remote on GitHub:
1) git branch // shows current branch
2) git remote add origin https://github.com/YaroslavaZavalna/first-repository.git //added remote repository on GitHub named origin with URL of remote repository
3) git remote //view created remote repository
4) git push origin master //pushed branch "master" from local repository to remote repository
5) git log //checked commits

Afterwards, i started making new branch:
1) git branch //checked on which branch i am now 
2) cat>>file.txt
    New text change to "Hi, World"//added changes to file.txt
3) cat file.txt
    Hello!
    New text change to "Hi, World" //checked what is inside file
4) git status //checked if git see addition to my file
5) git add file.txt //add modified file to branch "first"
6) git status //checked if modified file is tracked
7) git commit -m "first: changed file.txt" //commited modified file
8) git status //checked latest commit
9) git push origin first //pushed branch "first" to remote repository
10) git checkout master //changed branch to "master"
11) git status //checked the branch
12) git merge master first //merged branch "first" in "master"
13) git push origin  master // pushed changes to remote repository
14) git branch -d first // deleted branch "first"
15) git branch //checked if deletion was successful





